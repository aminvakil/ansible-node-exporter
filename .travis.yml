---
language: shell
os: linux
dist: bionic
env:
  - distribution: centos
    version: 8
  - distribution: centos
    version: 7
  - distribution: debian
    version: buster
  - distribution: ubuntu
    version: focal
  - distribution: ubuntu
    version: bionic
  - distribution: ubuntu
    version: xenial
  - distribution: fedora
    version: 32
  - distribution: fedora
    version: 31
  - distribution: fedora
    version: 30
  - distribution: fedora
    version: 29
  - distribution: fedora
    version: 28
  - distribution: fedora
    version: 27
  - distribution: fedora
    version: 26
  - distribution: fedora
    version: 25

services:
  - docker
before_install:
  - 'sudo docker pull ${distribution}:${version}'
  - 'sudo docker build --no-cache --rm --file=travis/Dockerfile.${distribution}-${version} --tag=${distribution}-${version}:ansible travis'
script:
  - container_id=$(mktemp)
  - 'sudo docker run --detach --privileged -v /sys/fs/cgroup:/sys/fs/cgroup:ro --volume="${PWD}":/etc/ansible/roles/node-exporter:ro ${distribution}-${version}:ansible > "${container_id}"'
  - 'sudo docker exec "$(cat ${container_id})" env ANSIBLE_FORCE_COLOR=1 ansible-playbook -v /etc/ansible/roles/node-exporter/node.yml --syntax-check'
  - 'sudo docker exec "$(cat ${container_id})" env ANSIBLE_FORCE_COLOR=1 ansible-playbook -v /etc/ansible/roles/node-exporter/node.yml'
  - >
    sudo docker exec "$(cat ${container_id})" env ANSIBLE_FORCE_COLOR=1 ansible-playbook -v /etc/ansible/roles/node-exporter/node.yml
    | grep -q 'changed=0.*failed=0'
    && (echo 'Idempotence test: pass' && exit 0)
    || (echo 'Idempotence test: fail' && exit 1)
  - 'sudo docker rm -f "$(cat ${container_id})"'
